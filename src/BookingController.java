//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : BookingApplication
//  @ File Name : Sarah

//  @ Date : 06/03/17
//  @ Author : 
//
//



import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import javaapplication3.*;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.SQLQuery;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;
import org.hibernate.cfg.Configuration;
import org.hibernate.service.ServiceRegistry;

public class BookingController {

    // thid id got hibrtnstr  eill hsvr mspping informstion sbout our classes snd database tables
    private static Configuration configuration;
    private static ServiceRegistry registry;
    // to get physical connection to database
    private static SessionFactory factory;
    private Booking newbooking;
    
    //private List<Booking> bookinglist;
    private static BookingController instance = new BookingController();
    private BookingController()
    {
        // load mapping configuration file.
        configuration = new Configuration().configure();
        registry = new StandardServiceRegistryBuilder().applySettings(
                configuration.getProperties()).build();
        // Get physical connection
        factory = configuration.buildSessionFactory(registry);        
    }
    
    public static BookingController getInstance(){
      return instance;
   }
    
    public int MakeBooking(int custid,int sessiontype,int sessionid)
    {
        int newid=0;
        try 
        {
            newbooking= new Booking(); 
            newbooking.setBookingId(GetMaxBookingId());
            newbooking.setCustomerId(custid); 
            newbooking.setSessionType(sessiontype);
            Session session = factory.openSession();
            // thid is  
            Transaction tx = session.beginTransaction();            
            newid=( Integer )session.save(newbooking);
            tx.commit();
        } 
        catch (Exception e) 
        {
            e.printStackTrace();
        }
        return newid;
    }
    
    private Integer GetMaxBookingId()
    {
        Session session = factory.openSession();
        Transaction tx = null;        
        Integer newid=0;
        try
        {            
            tx = session.beginTransaction();
            String sql = "SELECT max(BOOKINGid) FROM BOOKING";
            SQLQuery query = session.createSQLQuery(sql);
            //query.addEntity(Mysession.class);
            List sessions = query.list();            
            String tempstr = sessions.get(0).toString();
            newid=Integer.parseInt(tempstr);                        
            newid++;
            tx.commit();            
        }
        catch (HibernateException e) 
        {
          if (tx!=null) tx.rollback();
          e.printStackTrace(); 
        }
        finally 
        {
          session.close(); 
          return newid;
        }
        
    }
    
    public List viewSchedule() 
    {
        Session session = factory.openSession();
        Transaction tx = null;
        List sessions=null;
        try
        {
            Date date=new Date();
            DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            tx = session.beginTransaction();
            String sql = "SELECT * FROM mysession where date='"+df.format(date)+"'";
            SQLQuery query = session.createSQLQuery(sql);
            query.addEntity(Mysession.class);
            //List sessions = query.list();
            sessions = query.list();
            if(sessions.size()>0)
            {
                for (Iterator iterator1 = sessions.iterator(); iterator1.hasNext();)
                {
                    Mysession se = (Mysession) iterator1.next();                    
                    System.out.print("date: " + se.getDate()); 
                }
            }            
            tx.commit();            
        }
        catch (HibernateException e) 
        {
          if (tx!=null) tx.rollback();
          e.printStackTrace(); 
        }
        finally 
        {
          session.close(); 
          return sessions;
        }                
    }
	
    public List<Customer> viewCustomer(int custid,String dob) 
    {
        List custlist=null;                    
        Session session = factory.openSession();
        Transaction tx = null;
        try
        {
            tx = session.beginTransaction();
            String sql="";
            if(custid>0)
            {
                sql = "SELECT * FROM customer where customerid="+custid;
            }
            else if(!dob.isEmpty())
            {
                DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                Date tempdob=df.parse(dob);
                if(tempdob!=null)
                {
                    sql = "SELECT * FROM customer where dob='"+df.format(tempdob)+"'";
                    
                }
            }
                    
            SQLQuery query = session.createSQLQuery(sql);
            query.addEntity(Customer.class);
            custlist = query.list();
            
            tx.commit();
        }
        catch (HibernateException e) 
        {
          if (tx!=null) tx.rollback();
          e.printStackTrace(); 
        }
        catch(ParseException e)
        {
            if (tx!=null) tx.rollback();
            e.printStackTrace();
        }
        finally 
        {
          session.close(); 
        }
        return custlist;
    }
    /*public void CalculatePayment(Booking bookinginfo) {

    }*/

    //public void AddNewBooking(Integer cid, SessionType st) {

    //}
}
	
	
